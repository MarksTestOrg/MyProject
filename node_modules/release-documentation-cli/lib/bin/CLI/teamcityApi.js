'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.findTeamcityBuildTestEvidence = undefined;

var _axios = require('axios');

var _axios2 = _interopRequireDefault(_axios);

var _getCommitHashOfTag = require('./getCommitHashOfTag');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const TEAMCITY_TOKEN = process.env.TEAMCITY_TOKEN;
const baseUrl = 'http://teamcity.tnl-core.ntch.co.uk';

const getBuilds = async jobName => {
  const response = await _axios2.default.get(`${baseUrl}/app/rest/builds?locator=buildType:(id:${jobName}),count:50&fields=count,build(id,number,status,statusText,agent,lastChange,tags,pinned,revisions(revision))`, {
    headers: { Authorization: `Basic ${TEAMCITY_TOKEN}` }
  });
  return response.data.build;
};

const findTeamcityBuildTestEvidence = exports.findTeamcityBuildTestEvidence = async jobName => {
  const commitHash = await (0, _getCommitHashOfTag.getCommitHashOfTag)();

  const builds = await getBuilds(jobName);
  const correctBuild = builds.find(build => commitHash === build.revisions.revision[0].version);

  if (correctBuild) {
    const url = `${baseUrl}/viewLog.html?buildId=${correctBuild.id}&tab=buildResultsDiv&buildTypeId=${jobName}`;
    return { jobName, status: correctBuild.status, url };
  } else {
    throw new Error(`No build found with commit hash: ${commitHash}`);
  }
};