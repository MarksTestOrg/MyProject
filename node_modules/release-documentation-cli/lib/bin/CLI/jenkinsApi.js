'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.findJenkinsBuildTestEvidence = undefined;

var _axios = require('axios');

var _axios2 = _interopRequireDefault(_axios);

var _xml2json = require('xml2json');

var _xml2json2 = _interopRequireDefault(_xml2json);

var _querystring = require('querystring');

var _querystring2 = _interopRequireDefault(_querystring);

var _getCommitHashOfTag = require('./getCommitHashOfTag');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const JENKINS_TOKEN = process.env.JENKINS_TOKEN;
const baseApiUrl = 'http://jenkins.dev.tnl-core.ntch.co.uk';

const findCorrectJobBuilds = async commitHash => {
  const response = _axios2.default.get(`${baseApiUrl}/api/xml?tree=jobs[name,builds[result,number,building,actions[parameters[name,value]]]]&xpath=/hudson/job[build/action/parameter[name="ghprbActualCommit"][value="${commitHash}"]]`, { headers: { Authorization: `Basic ${JENKINS_TOKEN}` } });
  return _xml2json2.default.toJson(response.data, { object: true });
};

const findJenkinsBuildTestEvidence = exports.findJenkinsBuildTestEvidence = async jobName => {
  const commitHash = await (0, _getCommitHashOfTag.getCommitHashOfTag)();
  const builds = await findCorrectJobBuilds(commitHash);
  let status;
  let buildNumber;

  builds.job.build.forEach(build => {
    build.action.forEach(action => {
      action.parameter && action.parameter.forEach(parameter => {
        if (parameter.name === 'ghprbActualCommit' && parameter.value === commitHash) {
          status = build.result;
          buildNumber = build.number;
        }
      });
    });
  });

  if (status) {
    const url = `${baseApiUrl}/job/${_querystring2.default.escape(jobName)}/${buildNumber}`;
    return { jobName, status, url };
  } else {
    throw new Error(`No build found with commit hash: ${commitHash}`);
  }
};