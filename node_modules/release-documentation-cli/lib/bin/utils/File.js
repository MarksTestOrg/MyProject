'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _fs = require('fs');

var _fs2 = _interopRequireDefault(_fs);

var _mkdirp = require('mkdirp');

var _mkdirp2 = _interopRequireDefault(_mkdirp);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

class File {
  constructor(filePath) {
    this._filePath = filePath;
  }

  get filePath() {
    return this._filePath;
  }

  get exists() {
    return _fs2.default.existsSync(this.filePath);
  }

  get parentDirectories() {
    return this.filePath.split('/').slice(0, -1).join('/');
  }

  get asString() {
    try {
      return _fs2.default.readFileSync(this.filePath, 'utf8').toString();
    } catch (err) {
      console.error(`Failed to read the file: ${this.filePath}, Error: `, err);
    }
    return null;
  }

  get asJson() {
    try {
      return JSON.parse(_fs2.default.readFileSync(this.filePath));
    } catch (err) {
      console.error(`Failed to parse the file as JSON: ${this.filePath}`, err.message);
    }
    return null;
  }

  write(contents) {
    try {
      _mkdirp2.default.sync(this.parentDirectories);
      _fs2.default.writeFileSync(this.filePath, contents);
    } catch (err) {
      throw new Error(`Failed to write contents to the file: ${this.filePath}, ${err}`);
    }
  }
}
exports.default = File;