'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _mversion = require('mversion');

var _mversion2 = _interopRequireDefault(_mversion);

var _RecommendedVersion = require('../utils/RecommendedVersion');

var _RecommendedVersion2 = _interopRequireDefault(_RecommendedVersion);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

class TaggedRelease {
  constructor() {}

  async bumpAndTag() {
    try {
      return await bumpVersionAndTag((await new _RecommendedVersion2.default().get()));
    } catch (err) {
      throw new Error(`Unable to bump and tag the release: ${err.toString()}`);
    }
  }
}

exports.default = TaggedRelease;
const bumpVersionAndTag = type => new Promise((resolve, reject) => _mversion2.default.update({
  version: type,
  commitMessage: 'chore: bumping version number'
}, (err, data) => {
  if (err) {
    reject(err);
  } else {
    resolve(data);
  }
}));